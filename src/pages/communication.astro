---
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import NoticePost from '../layouts/NoticePost';

type INotice = CollectionEntry<'notices'>;

const notices = await getCollection('notices');
// notices = notices.groupBy((article: INotice) => {
// 	const date = new Date(article.data.pubDate);
// 	return `${date.getFullYear()}-${date.getMonth() + 1}`;
// });

const currentYear = new Date().getFullYear();
const currentMonth = new Date().getMonth() + 1;

const currentMonthNotices = notices
	.filter((article: INotice) => {
		const articleDate = new Date(article.data.pubDate);
		return (
			articleDate.getFullYear() === currentYear &&
			articleDate.getMonth() === currentMonth - 1
		);
	})
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const currentMonthName = new Intl.DateTimeFormat('pt-BR', {
	month: 'long',
}).format(new Date(currentYear, currentMonth - 1));
---

<Layout>
	<h1
		class="max-md:block max-md:w-full max-md:text-center text-3xl font-bold mb-8 md:w-1/3 mx-auto text-left px-5"
	>
		Notícias
	</h1>

	<div>
		<h2 class="text-xl font-bold my-4 mb-8 capitalize">
			{`${currentMonthName} ${currentYear}`}
		</h2>
		<ul
			class="flex flex-col gap-8 list-none m-0 p-0 max-md:w-full ml-auto max-h-[900px] overflow-auto border-l-4 border-l-foreground/10 pl-4 pr-2 max-md:pl-0 max-md:border-l-0 max-md:pt-2 max-md:mt-0"
		>
			{
				currentMonthNotices.length === 0 ? (
					<p class="text-center">Nenhuma notícia publicada neste mês.</p>
				) : null
			}
			{
				currentMonthNotices.map((notice) => (
					<li class="w-full flex flex-col justify-center items-center  mx-auto ">
						<NoticePost {...notice} client:visible />
					</li>
				))
			}
		</ul>
	</div>
</Layout>
